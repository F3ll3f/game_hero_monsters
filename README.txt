Ελευθέριος Μπόλκας 1115201900353

Εργασία
--------
Η εργασία έγινε ατομικά.

Εντολή μεταγλώτισης:
make

Περιλαμβάνονται τα αρχεία: battle.cpp, battle.h, grid.cpp, grid.h, hero_products.cpp, 
hero_products.h, living.cpp, living.h, product.cpp, product.h, rpg.cpp στους φακέλους include και src 
καθώς και ο φάκελος Names_Stats με τα αρχεία Armors.txt, Heroes.txt, Monsters.txt, Potions.txt, 
Spells.txt, Weapons.txt.

Εκτέλεση: ./rpg

Στο αρχείο product.h ορίζονται οι κλάσεις Product, Item, Weapon, Armor, Potion, Spell, IceSpell, 
FireSpell και LightingSpell και στο product.cpp η υλοποίηση των μεθόδων τους.
Στο αρχείο living.h ορίζονται οι κλάσεις Living, Hero, Warrior, Sorcerer, Paladin, Monster, Dragon, 
Exoskeleton και Spirit και στο living.cpp η υλοποίηση των μεθόδων τους.
Στο αρχείο hero_products.h ορίζονται οι κλάσεις HeroProducts, HeroWeapons, HeroArmors, HeroPotions 
και HeroSpells και στο hero_products.cpp η υλοποίηση των μεθόδων τους.
Στο αρχείο battle.h ορίζονται οι κλάσεις Battle και SpellEffect και στο battle.cpp η υλοποίηση των 
μεθόδων της πρώτης.
Στο αρχείο grid.h ορίζονται οι κλάσεις Grid, Square, nonAccessible, Accessible, market και common και 
στο grid.cpp η υλοποίηση των μεθόδων τους.


1)Βήματα-σκέψεις που ακολουθήθηκαν και γενικά στοιχεία για τη μοντελοποίηση της άσκησης(αναλυτικότερη 
περιγραφή των κλάσεων υπάρχει παρακάτω):
Αρχικά δημιουργήθηκαν οι κλάσεις σχετικά με τα αντικείμενα(Items) και τα ξόρκια(Spells). Καθώς οι δύο 
αυτές κατηγορίες μοιράζονται κοινά χαρακτηριστικά επιλέχθηκε να δημιουργηθεί μία γενικότερη αφηρημένη 
κλάση που περιλαμβάνει όλα αυτά τα προϊόντα, η Product. Έτσι, δημιουργήθηκαν και 2 υποκλάσεις της 
Product, η Item και η Spell για την έννοια του αντικειμένου και του ξορκιού αντίστοιχα. Και οι 2 
αυτές κλάσεις είναι αφηρημένες, καθώς τόσο τα ξόρκια όσο και αντικείμενα χωρίζονται σε κατηγορίες και 
δεν είναι επιθυμητή η δημιουργία αντικειμένου αυτών των γενικών εννοιών. Ως υποκλάσεις της Item, 
ορίζονται οι κλάσεις Weapon, Armor και Potion για τις αντίστοιχες έννοιες και ως υποκλάσεις της Spell 
οι IceSpell, FireSpell και LightingSpell για τα αντίστοιχα ξόρκια.

Έπειτα δημιουργήθηκαν οι κλάσεις σχετικά με τις ζωντανές οντότητες. Η αφηρημένη κλάση ον(Living) 
περιλαμβάνει όλα τα όντα και έχει δύο υποκλάσεις, που είναι επίσης αφηρημένες, τις Hero και Monster 
για τους ανθρώπους και τέρατα αντίστοιχα. Δημιουργήθηκαν επίσης οι υποκλάσεις Warrior, Sorcerer και 
Paladin της Hero για τις 3 κατηγορίες ηρώων και οι Dragon, Exoskeleton και Spirit για τις 3 
κατηγορίες των τεράτων.

Καθώς η κλάση των ηρώων(Hero) που δημιουργήθηκε κατέληξε να έχει πολλά πεδία και πολλές μεθόδους και 
συνεπώς να είναι πολύ μεγάλη και δυσανάγνωστη, αποφάσισα να σπάσει ως εξής. Δημιουργήθηκε η κλάση 
HeroProduct η οποία σχετίζεται με τα προϊόντα που έχει αγοράσει και χρησιμοποιεί ή απλά κατέχει ένας 
ήρωας(μπορούμε να το σκεφτόμαστε σαν μια "τσάντα" με τα αντικείμενα που έχει ένας ήρωας). Η 
HeroProduct είναι αφηρημένη κλάση και έχει 4 παραγόμενες κλάσεις, τις HeroWeapons, HeroArmors, 
HeroPotions και HeroSpells οι οποίες αναφέρονται στα όπλα, τις πανοπλίες, τα φίλτρα και τα ξόρκια 
αντίστοιχα που έχει ένας ήρωας. Έτσι, η κλάση Hero έχει 4 πεδία(τα HWeapons, HArmors, HPotions και 
HSpells) τα οποία είναι δείκτες σε αντικείμενα τα παραπάνω κλάσεων. Με αυτό τον τρόπο, όλες οι 
πληροφορίες σχετικά με τα προϊόντα που έχει αγοράσει ο ήρωας βρίσκονται στο αντίστοιχο αντικείμενο 
από τα 4 παραπάνω και το ίδιο ισχύει για όλες τις μεθόδους που είναι σχετικές με αυτά.

Έπειτα, για την έννοια της μάχης δημιουργήθηκε μια ξεχωριστή κλάση Battle. Όταν ξεκινάει μια μάχη 
δημιουργείται ένα αντικείμενο αυτής της κλάσης και όλες οι λειτουργίες της μάχης γίνονται με μεθόδους 
πάνω σε αυτό το αντικείμενο. Η εμφωλευμένη κλάση SpellEffect αφορά την έννοια ενός ξορκιού που έχει 
εκτελεστεί κατά τη διάρκεια της μάχης και κρατά πληροφορίες για αυτό μέχρι να τελειώσει η επίδρασή 
του. Είναι εμφωλευμένη καθώς η ορατότητά της έχει νόημα μόνο εντός της μάχης.

Στο τέλος, για την κυρίως λειτουργία του παιχνιδιού δημιουργήθηκε η κλάση Grid που αφορά την έννοια 
του πλέγματος. Όταν το παιχνίδι ξεκινάει, δημιουργείται ένα αντικείμενο αυτής της κλάσης και όταν ο 
παίκτης βρίσκεται εκτός μάχης, όλα τα στοιχεία του παιχνιδιού υλοποιούνται με τα μέλη αυτής της 
κλάσης. Για την έννοια των τετραγώνων του πλέγματος δημιουργήθηκε η εμφωλευμένη κλάση στην Grid, 
Square. Η Square επιλέχθηκε να είναι εμφωλευμένη στην Grid καθώς αποτελεί στοιχείο της εσωτερικής 
αναπράστασης του πλέγματος και τα τετράγωνα του πλέγματος έχουν νόημα μόνο ως μέρος του πλέγματος. 
Συγκεκριμένα, η Grid έχει ένα πεδίο που είναι πίνακας δεικτών στα τετράγωνα του πλέγματος. Καθώς τα 
τετράγωνα του πλέγματος χωρίζονται σε υποκατηγορίες, η Square επιλέχθηκε να είναι αφηρημένη κλάση και 
έχει ως παραγόμενες κλάσεις την nonAccessible και την Accessible. Η πρώτη αφορά ένα τετράγωνο το 
οποίο δεν είναι προσβάσιμο ενώ η δεύτερη ένα προσβάσιμο τετράγωνο. Η Accessible είναι αφηρημένη κλάση 
καθώς ένα προβάσιμο τετράγωνο είναι μία γενική έννοια και μπορεί να είναι είτε κοινό τετράγωνο είτε 
αγορά. Συνεπώς δημιούργθηκαν οι παραγόμενές της κλάσεις common και market για το κοινό τετράγωνο και 
την αγορά αντίστοιχα. Όλες αυτές οι κλάσεις, όπως και η Square, είναι εμφωλευμένες στην Grid. 


2)Περιγραφή των κλάσεων και πιο συγκεκριμένων στοιχείων της μοντελοποίησης:
Η κλάση Product έχει ως πεδία κάποια κοινά στοιχεία των προϊόντων και μεθόδους που ανακτάνε αυτά τα 
στοιχεία. Η DisplayInfo που εκτυπώνει τα στοιχεία του προϊόντος είναι pure virtual αφού τα στοιχεία 
εξαρτώνται από το αντικείμενο ή το ξόρκι που εκτυπώνεται. Όμοια στην κλάση Item υπάρχει η μέθοδος 
DisplayInfo με την ίδια λειτουργία. Η κλάση Weapon περιλαμβάνει ως μέλος μια δήλωση enumeration 
σχετικά με τον αριθμό των χεριών που κρατιέται ένα όπλο. Αυτή μπήκε ως μέλος της κλάσης γιατί έχει 
νόημα μόνο για αυτήν την κλάση. Επίσης, η Weapon περιλαμβάνει και πεδία για τη ζημιά που προκαλεί το 
όπλο, για το με πόσα χέρια κρατιέται καθώς και getter μεθόδους μαζί με την DisplayInfo. Όμοια πεδία 
και μεθόδους περιλαμβάνουν και οι κλάσεις Armor και Potion. Ιδιαίτερα, στην κλάση Armor το πεδίο 
damage_reduction είναι ακέραιος και διαιρώντας το με το 100 βρίσκουμε το ποσοστό μείωσης της ζημιάς 
που δέχεται ο ήρωας λόγω της πανοπλίας. Η κλάση Potion περιλαμβάνει(παρόμοια με την Weapon) μια 
δήλωση enum Stat σχετικά με ποιο στατιστικό αυξάνεται από το φίλτρο και η πληροφορία αυτή αποθηκεύται 
στο πεδίο stat_increased. Η αφηρημένη κλάση Spell περιλαμβάνει κι αυτή όμοιες μεθόδους και πεδία με 
τις προηγούμενες κλάσεις σχετικά με τα χαρακτηριστικά των ξορκιών. Ιδιαίτερα, υπάρχει μια pure 
virtual μέθοδος Clone που χρησιμοποιείται για τη δημιουργία ενός αντιγράφου του ξορκιού για το οποίο 
καλείται επιστρέφοντας ένα δείκτη στο νέο αντίγραφο. Χρησιμοποείται όταν θέλουμε τη δημιουργία ενός 
αντιγράφου του ξορκιού χωρίς να γνωρίζουμε όμως την κατηγορία του ξορκιού(δηλαδή όταν έχουμε Spell 
*), οπότε και δεν μπορούμε να χρησιμοποιήσουμε τον copy constructor. Η ApplyEffect είναι pure virtual 
και εφαρμόζει τη μείωση ενός στατιστικού(ανάλογα με την κατηγορία του ξορκιού) στο αντίπαλο τέρας. Οι 
κλάσεις IceSpell, FireSpell και LightingSpell έχουν από ένα πεδίο που είναι οι ποσοστιαίες μονάδες 
μείωσης του αντίστοιχου στατιστικού και υλοποιούν τις virtual μεθόδους των υπερκλάσεών τους ανάλογα 
με τον τύπο του ξορκιού.

Η κλάση Living έχει ως μέλη, πεδία σχετικά με τα στοιχεία των όντων και μεθόδους που ανακτούν, 
τροποποιούν ή εκτυπώνουν τα στοιχεία τους. Για τη ζωτική ενέργεια υπάρχουν δύο πεδία, το healthPower 
που δείχνει τη γεμάτη ζωτική ενέργεια του όντος και η οποία παραμένει σταθερή καθ' όλη τη διάρκεια 
του παιχνιδιού, ενώ η curHP δείχνει τη ζωτική ενέργεια μια δεδομένη χρονική στιγμή. Η PrintStats 
είναι pure virtual και εκτυπώνει τα στοιχεία του όντος ανάλογα με τον τύπο του. Η CalculateStats 
είναι επίσης pure virtual υπολογίζει τα στατιστικά του όντος, ανάλογα με τον τύπο του. 

Η κλάση Hero έχει κάποια πιο ειδικά στοιχεία για τους ήρωες στα μέλη-πεδία της και αντίστοιχες 
μεθόδους για αυτά. Η magicPower και η curMP δείχνουν τη γεμάτη και τρέχουσα μαγική ενέργεια του ήρωα 
αντίστοιχα. Στα μέλη του ήρωα υπάρχουν επίσης τα πεδία BaseStrength, BaseDexterity και BaseAgility 
που δείχνουν τις τιμές των πεδίων strength, dexterity και agility όταν ο ήρωας είναι στο level 1 και 
χωρίς να εφαρμόσουμε αυξήσεις λόγω φίλτρων ή λόγω της εύννοιας κάποιων ικανοτήτων του ήρωα εξαιτίας 
του τύπου του. Αυτά τα base stats δημιουγήθηκαν καθώς οι ικανότητές του ήρωα(strength, dexterity και 
agility) αλλάζουν κατά τη διάρκεια του παιχνιδιού και για να υπολογίζονται με ακρίβεια τα νέα 
στατιστικά του ήρωα όταν γίνεται κάποια αλλαγή, χρησιμοπούνται αυτές οι τιμές με τις οποίες η μέθοδος 
CalculateStats μπορεί να υπολογίζει σωστά τα στατιστικά του ήρωα ανάλογα με τα φίλτρα που έχουν 
χρησιμοποιηθεί, τον τύπο και το level του. Επισημαίνεται ότι agility/2000 είναι η πιθανότητα να 
αποφύγει ο ήρωας μια επίθεση. Επίσης υπάρχουν(όπως έχει αναφερθεί και παραπάνω) τα πεδία HWeapons, 
HArmors, HPotions και HSpells που δείχνουν σε αντικείμενα των αντίστοιχων τύπων στα οποία 
αποθηκεύονται όλες οι πληροφορίες για τα αντικείμενα και τα ξόρκια του ήρωα και υπάρχουν οι 
κατάλληλες μέθοδοι για τον χειρισμό τους. Η πρόσβαση σε αυτά τα πεδία γίνεται με τις αντίστοιχες 
getter μεθόδους. Η μέθοδος levelUp αυξάνει ένα level στον ήρωα ανεβάζοντας κατάλληλα τα στατιστικά 
του. Οι κλάσεις Warrior, Sorcerer και Paladin πέρα από τις CalculateStats και PrintStats, 
περιλαμβάνουν ως μέλη από 2 πεδία που δείχνουν πόσες ποσοστιαίες μονάδες είναι ευνοημένοι στα 
στατιστικά που είναι ευνοημένοι. Τα 2 αυτά πεδία είναι static γιατί η κάθε κατηγορία ήρωα έχει 
επιλεγεί να έχει το ίδιο ποσοστό που είναι ευνοημένη στα αντίστοιχα στατιστικά της. Τα ποσοστά αυτά 
έχουν ως προεπιλογή την τιμή 10 και μπορούν να αλλάξουν με μία static μέθοδο που υπάρχει στην κάθε 
κατηγορία ήρωα. 

Όμοια με τους ήρωες στην κλάση Monster υπάρχουν ως μέλη κάποια πεδία για τα Base stats των 
τεράτων(που λειτουργούν με τον ίδιο τρόπο όπως στους ήρωες) καθώς και για τα κανονικά στατιστικά 
τους. Συγκεκριμένα τα στατιστικά τους είναι min_damage και max_damage για το εύρος της ζημιάς που 
προκαλούν, defence για την άμυνα και prob_missing ως ένα στατστικό που δείχνει πόσο πιθανό είναι να 
αποφύγει το τέρας μια επίθεση(prob_missing/2000 είναι η πιθανότητα να την αποφύγει). Τα υπόλοιπα μέλη 
είναι διάφορες μεθόδοι που χειρίζονται τα παραπάνω δεδομένα. Κατά αναλογία με τις κατηγορίες των 
ηρώων, οι 3 υποκλάσεις των τεράτων Dragon, Exoskeleton και Spirit έχουν από ένα static πεδίο που 
αυξάνει το στατιστικό που είναι ευνοημένα(default τιμή 10) και μία static μέθοδος για την περίπτωση 
που θέλουμε να παραμετροποιήσουμε στο παιχνίδι αυτό το πεδίο.

Η αφηρημένη κλάση HeroProducts έχει ένα πεδίο H(δείκτης σε Hero) που δείχνει στον ήρωα που έχει αυτά 
τα προϊόντα. Η υποκλάση HeroWeapons έχει δύο πεδία lhand και rhand που δείχνουν στα όπλα που κρατάει 
εκείνη τη στιγμή ο ήρωας στο αντίστοιχο χέρι του καθώς κι ένα πεδίο weapons που είναι ένας πίνακας 5 
στοιχείων που κρατάει τα όπλα που έχει αγοράσει ο ήρωας(το πολύ 5 μπορεί να έχει στην κατοχή του). Η 
υποκλάση HeroArmors έχει ένα πεδίο armor που δείχνει στην πανοπλία που φοράει εκείνη τη στιγμή ο 
ήρωας καθώς κι ένα πεδίο armors που είναι ένας πίνακας 5 στοιχείων που κρατάει τις πανοπλίες που έχει 
αγοράσει ο ήρωας(το πολύ 5 μπορεί να έχει στην κατοχή του). Η υποκλάση HeroPotions έχει ένα πεδίο 
potions που είναι ένας πίνακας 5 στοιχείων που κρατάει τα φίλτρα που έχει αγοράσει ο ήρωας(το πολύ 5 
μπορεί να έχει στην κατοχή του) καθώς κι ένα πεδίο UsedPotions που είναι ένας πίνακας 100 στοιχείων 
που κρατάει τα φίλτρα που έχει χρησιμοποίησει ένας ήρωας(κάθε ήρωας έχει επιλεγεί να μπορεί να 
χρησιμοποίησει συνολικά στο παιχνίδι το πολύ 100 φίλτρα για να έχει νόημα να επιλέγει ο παίκτης ποια 
στατιστικά θα αυξήσει και να μην μπορούν να μεγιστοποιηθούν όλα). Η υποκλάση HeroSpells έχει ένα 
πεδίο spells που είναι ένας πίνακας 5 στοιχείων που κρατάει τα ξόρκια που έχει αγοράσει ο ήρωας(το 
πολύ 5 μπορεί να έχει στην κατοχή του). Και οι 4 υποκλάσεις έχουν μεθόδους για να χειρίζονται τα 
διάφορα προϊόντα. Επισημαίνεται ότι η μέθοδος BuySpell δημιουργεί ένα αντίγραφο από το αντίστοιχο 
προϊόν κάθε φορά που χρησιμοποιείται.

Η κλάση Battle έχει μία εμφωλευμένη κλάση SpellEffect ως μέλος όπως αναφέρθηκε παραπάνω. Κάθε 
αντικείμενο SpellEffect σχετίζεται με ένα ξόρκι που εκτελέστηκε στη μάχη και κρατάει τις πληροφορίες 
για το πόσους γύρους έχει ακόμα επίδραση το ξόρκι καθώς και ποιο τέρας χτυπήθηκε. Τα αντικείμενα αυτά 
κρατούνται σε ένα vector SpellsInEffect που είναι πεδίο-μέλος της Battle και κάθε φορά που η επίδραση 
ενός ξορκιού τελειώνει(3 γύρους μετά την εκτέλεσή του όπως έχει επιλεγεί), αφαιρείται από το vector 
και καταστρέφεται. Ως πεδία στην κλάση Battle υπάρχουν επίσης τα τέρατα και οι ήρωες που συμμετέχουν 
στην μάχη. Το αντικείμενο Battle δημιουργείται όταν θέλουμε να δημιουργήσουμε μια μάχη καλώντας τον 
consructor του ο οποίος παίρνει ως όρισμα τους ήρωες του παιχνιδιού. Κατά την κατασκευή του 
επιλέγεται ο αριθμός των αντίπαλων τεράτων και δημιουργούνται τα τέρατα. Αφού δημιουργηθεί μια μάχη, 
ξεκινάει με τη μέθοδο startBattle στην οποία υλοποιείται η λειτουργία της μάχης και κατά την οποία ο 
παίκτης αλληλεπιδρά με το σχετικό μενού που υλοποιείται σε αυτή. Οι μέθοδοι attack, castSpell, use, 
change και displayStats που έχουν να κάνουν με τις σχετικές επιλογές, είναι private μέλη της Battle 
καθώς επιθυμούμε να χρησιμοποιούνται μόνο από τη μέθοδο startBattle. Το ίδιο ισχύει και για τις 
MonstersAndHeroesAreAlive και SpellsEndOfRound, οι οποίες είναι βοηθητικές. Η πρώτη ελέγχει αν η μάχη 
μπορεί να συνεχιστεί(δηλαδή αν τουλάχιστον ένα τέρας κι ένας ήρωας είναι ζωντανοί) και η δεύτερη κατά 
το τέλος ενός γύρου της μάχης, μειώνει ένα γύρο από τους εναπομείναντες της επίδρασης των ξορκιών και 
αφαιρεί όσα ξόρκια σταμάτησαν την επίδρασή τους. 

Στην κλάση Grid πέρα από τις εμφωλευμένες κλάσεις Square, nonAccessible, Accessible, market και 
common που έχουν αναφερθεί παραπάνω, υπάρχει ως μέλος η enum direction που έχει 4 κατευθύνσεις. Αυτή 
δημιουργήθηκε για να είναι πιο ευδιάκριτη η κατεύθυνση στην κίνηση στο πλέγμα και είναι μέλος της 
Grid κάθως ο χειρισμός της κίνησης γίνεται μόνο εντός του πλέγματος. Η Grid έχει επίσης ως πεδία ένα 
πίνακα με δείκτες στα τετράγωνα του πλέγματος καθώς και τις διαστάσεις του, τις συντεταγμένες της 
ομάδας στο πλέγμα, καθώς και τους ήρωες(και τον αριθμό τους) από τους οποίους αποτελείται η ομάδα. Το 
πλέγμα δημιουργείται με τον constructor της κλάσης, ο οποίος ανάλογα με τα ορίσματά του μπορεί να 
παραμετροποιήσει το πλέγμα. Συγκεκριμένα, αν στον constructor περαστεί όρισμα true στη μεταβλητή 
CreateMap, δίνεται η δυνατότητα στο χρήστη να σχεδιάσει αυτός το πλέγμα, ενώ μπορεί να περαστεί και 
σαν όρισμα στον constructor ένα έτοιμος χάρτης για να δημιουργηθεί από εκεί το πλέγμα. Οι επιλογές 
αυτές αναλύονται και στα σχόλια της κλάσης στο σχετικό αρχείο. Όταν ο constructor καλείται χωρίς 
ορίσματα, κατασκευάζεται ένα προεπιλεγμένο 20x20 πλέγμα. Αφού κατασκευαστεί το πλέγμα, ο χρήστης 
μπορεί να καλέσει τη μέθοδο startGame με την οποία δημιουργούνται ήρωες ανάλογα με τις επιλογές του 
χρήστη και ξεκινάει το παιχνίδι. Οι μέθοδοι move, checkInventory, equip, use, displayInfo, displayMap 
και quitGame υλοποιούν τις επιλογές του παίκτη όσο βρίσκεται στο πλέγμα εκτός μάχης και καλούνται 
εντός της μεθόδου startGame μέσα από ένα μενού με το οποίο αλληλεπιδρά ο παίκτης. Καθώς οι παραπάνω 
μέθοδοι καλούνται μόνο από την startGame, έχουν επιλεγεί να είναι private. Υπάρχει επίσης ως μέλος 
ένα private και static πεδίο, το DoQuit, το οποίο παίρνει την τιμή true μόνο όταν ο χρήστης επιλέξει 
να τερματίσει το παιχνίδι κατά τη διάρκεια μιας μάχης, πριν αυτή ολοκληρωθεί, ώστε να εντοπίζεται η 
συγκεκριμένη επιλογή και να τερματίζει ομαλά το παιχνίδι. Η αλλαγή της τιμής της DoQuit σε true 
γίνεται με τη static μέθοδο ForceQuit. 

Στις εμφωλευμένες κλάσεις Square, nonAccessible, Accessible, market και common της Grid όλα τα μέλη 
είναι public καθώς οι κλάσεις είναι private μέλης της Grid και συνεπώς δεν υπάρχει έτσι κι αλλιώς 
ορατότητα εκτός της Grid που τις χειρίζεται. Η Square έχει ως μέλος ένα πεδίο grid που είναι ένας 
δείκτης στο πλέγμα στο οποίο ανήκει. Οι μέθοδοι Enter, Exit και Print είναι pure virtual και 
ορίζονται κατάλληλα από τις υποκλάσεις της Square. Η υποκλάση nonAccessible έχει ως μέλη της τις 
παραπάνω μεθόδους. Η Enter επιστρέφει false και εκτυπώνει ότι η ομάδα ηρώων προσπαθεί αλλά δεν μπορεί 
να μπει σε αυτό το τετράγωνο. Η exit εκτυπώνει απλά ένα μήνυμα ότι η ομάδα επιστρέφει στο προηγούμενο 
τετράγωνο. Έτσι, αν ο παίκτης επιχειρήσει να πάει σε μη προσβάσιμο τετράγωνο δεν τα καταφέρνει και 
εμφανίζονται τα ανάλογα μηνύματα. Επειδή όμως βγαίνει από το τετράγωνο του προσωρινά(επιχειρώντας να 
μετακινηθεί) και επιστρέφει σε αυτό, είναι δυνατό κατά την επιστροφή της ομάδας να προκύψει κανονικά 
μάχη, παρ' όλο που τελικά κατέληξε στο ίδιο τετράγωνο. Η Print εκτυπώνει "NNN". Η υποκλάση Accessible 
περιέχει ως μέλος το πεδίο TeamIsHere που έχει την τιμή true μόνο όταν η ομάδα βρίσκεται σε αυτό το 
τετράγωνο. Η Enter εισάγει την ομάδα στο τετράγωνο αυτό(αλλάζοντας τιμή στην TeamIsHere), η exit την 
εξάγει από αυτό(αλλάζοντας πάλι τιμή στην TeamIsHere) και η print είναι pure virtual. H παραγόμενη 
κλάση της Accessible, market, έχει ως μεθόδους τις buy, sell, Enter και Print. H Print εκτυπώνει " M 
" ή "T M" ανάλογα με την παρουσία ή την απουσία της ομάδας. Η enter εισάγει την ομάδα στο τετράγωνο 
και μέσα από αυτή αλληλεπιδρά με τον παίκτη για να αγοράσει ή να πουλήσει προϊόντα μέσα από κατάλληλο 
μενού καλώντας την buy ή την sell αντίστοιχα. Οι buy και sell αγοράζουν και πουλάνε προϊόντα ενός 
ήρωα τα οποία διαλέγει ο παίκτης πάλι μέσα από κατάλληλα μενού. Τέλος, η κλάση common έχει τις δύο 
μεθόδους Enter kai Print. Η πρώτη εισάγει τους ήρωες στο τετράγωνο και αποφασίζει τυχαία με 
πιθανότητα 30% αν θα γίνει μάχη όταν μπαίνουν σε αυτό. H Print εκτυπώνει "   " or " T " ανάλογα με 
την παρουσία ή την απουσία της ομάδας από αυτό.


3)Στοιχεία σχετικά με τη λειτουργία του παιχνιδιού, παραδοχές και άλλες σχεδιαστικές επιλογές:
Στο αρχείο rpg.cpp βρίσκεται η main η οποία δημιουργεί ένα πλέγμα και ξεκινάει το παιχνίδι. Τα 
ονόματα και τα στατιστικά-ιδιότητες των ηρώων, τεράτων, αντικειμένων και ξορκιών λαμβάνονται από τα 
σχετικά αρχεία που έφτιαξα στο φάκελο Names_Stats.
Σχετικά με το παιχνίδι έχουν επιλεγεί τα παρακάτω:
Οι ήρωες όταν δημιουργούνται ξεκινάνε με 5 μονάδες χρημάτων και επίπεδο 1. 
Η ομάδα των ηρώων ξεκινάει πάντα από το πρώτο αριστερά τετράγωνο το παιχνίδι. 
Τα στατιστικά των ηρώων και των τεράτων μπορούν να πάρουν τιμές 0-1000 ενώ τα Base stats τους κατά τη 
δημιουργία τους παίρνουν τιμές 0-10. 
Τα ποσά γεμάτης ζωτικής και μαγικής ενέργειας παραμένουν σταθερά κατά τη διάρκεια του παιχνιδιού και 
δεν αλλάζουν με το level.
Ένας ήρωας μπορεί να έχει πολλά ίδια φίλτρα, αλλά δεν μπορεί να έχει 2 ή παραπάνω ίδια όπλα, 
πανοπλίες ή ξόρκια.
Κατά τη δημιουργία μιας μάχης ο αριθμός των αντίπαλων τεράτων που εμφανίζονται εξαρτάται από τον 
αριθμό των ηρώων και συγκεκριμένα:
1 ήρωας(50% 1 τέρας, 30% 2 τέρατα, 20% 3 τέρατα)
2 ήρωες(20% 1 τέρας, 50% 2 τέρατα, 20% 3 τέρατα, 10% 4 τέρατα)
3 ήρωες(10% 1 τέρας, 20% 2 τέρατα, 40% 3 τέρατα, 20% 4 τέρατα, 10% 5 τέρατα)
Τα level των τεράτων στη μάχη είναι τυχαία στο εύρος [ελάχιστο level ηρώων-1, μέγιστο level ηρώων+1]
Στη μάχη έχει επιλεγεί κάθε επίθεση ηρώων και τεράτων να χάνει τουλάχιστον 10 και 5 μονάδες ζωτικής 
ενέργειας στους αντιπάλους τους αντίστοιχα. Δηλαδή αν μετά τον υπολογισμό της ζημιάς που προκαλείται 
προκύπτει μικρότερος αριθμός από τους παραπάνω λόγω των διάφορων στατιστικών και αντικειμένων, τότε η 
ζημιά αλλάζει και γίνεται 10 και 5 μονάδες αντίστοιχα. Αυτό γίνεται για να μην εξελίσσεται μια μάχη 
για πάντα χωρίς τέλος.
Οι ήρωες αν κρατάνε δύο διαφορετικά όπλα(ένα με το κάθε χέρι τους) τότε αν κάνουν επίθεση(attack) 
επιτίθενται και με τα δύο μαζί.
Στο τέλος του κάθε γύρου η ζωτική ενέργεια ηρώων και τεράτων αυξάνεται κατά 5% της συνολικής(γεμάτης) 
ζωτικής τους ενέργεια αν αυτοί είναι ζωντανοί και η μαγική ενέργεια των ηρώων κατά 10%.
Στο τέλος μιας μάχης, αν νίκησαν οι ήρωες, αυτοί κερδίζουν 1+(level του ήρωα)*(level του τέρατος) 
μονάδες χρημάτων για κάθε τέρας που νικήθηκε.
Στο τέλος μιας μάχης επίσης, αν νίκησαν οι ήρωες, αυτοί κερδίζουν 50*(level του τέρατος)/(level του 
ήρωα) πόντους εμπειρίας για κάθε τέρας που νικήθηκε.
Τέλος, αν νίκησαν οι ήρωες μετά από μια μάχη, ανεβαίνουν level αν οι πόντοι εμπειρίας τους είναι 
τουλάχιστον 30*(1+(level του ήρωα)^2).

